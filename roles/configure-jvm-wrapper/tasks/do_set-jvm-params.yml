---

## notes:
# rvar_jvm_params: same format as what's expected in the wrapper file...
# TODO: we should intelligently update the wrapper file without having to know about the additional and indices... BUT harder to create...
# For now, here is the sample format:
# rvar_jvm_params
#   wrapper.java.additional.400: "-Dtest1=val1.1"
#   wrapper.java.additional.401: "-Dtest2=val2.2"
#   wrapper.java.additional.402: "-Dtest3=val3.3"

  - debug: var=rvar_wrapper_file verbosity=1
  
  - name: fail if mandatory params not specified
    fail: 
      msg: "wrapper file source path is not defined...should be!"
    when: rvar_wrapper_file is not defined

  - name: check if wrapper path exists
    stat: 
      path: "{{ rvar_wrapper_file }}"
    register: check_wrapperfile

  - name: fail if wrapper file does not exists
    fail:
      msg: "wrapper file source path does not exist..."
    when: not check_wrapperfile.stat.exists

  - name: "Update config file {{ rvar_wrapper_file }} with rvar_jvm_params params if defined"
    lineinfile:
      state: present
      path: "{{ rvar_wrapper_file }}"
      regexp: "^{{ item.key | replace('.','\\.') }}="
      insertafter: "^#{{ item.key | replace('.','\\.') }}="
      line: "{{ item.key }}={{ item.value }}"
    with_dict: "{{ rvar_jvm_params }}"
    when: rvar_jvm_params is defined and (rvar_jvm_params|length > 0)