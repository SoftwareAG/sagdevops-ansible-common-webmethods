---

  - name: Command shutdown
    block:

    - name: Print the command that we're going to run
      debug:
        msg: "About to run: {{ webmethods_script_dir }}/{{ webmethods_script_stop }} {{ webmethods_script_stop_params }}"

    - name: Check if shutdown script exists
      stat:
        path: "{{ webmethods_script_dir }}/{{ webmethods_script_stop }}"
      register: stat_shutdown

    - name: fail if script not found
      fail: 
        msg: "Shutdown script {{ webmethods_script_dir }}/{{ webmethods_script_stop }} does not exist!"
      when: fail_script_notfound|bool and stat_shutdown.stat.exists == false

    - name: Perform action if script exists
      block:
        - name: run shutdown script
          shell: "{{ webmethods_script_stop }} {{ webmethods_script_stop_params }}"
          args:
            chdir: "{{ webmethods_script_dir }}"
            executable: /bin/sh
          register: cmd_result
        
        - name: Print command results to the console.
          debug: var=cmd_result verbosity=3

      when: stat_shutdown.stat.exists

    when: product_command is defined and product_command == "stop"

  - name: Command startup
    block:
    
    - name: Print the command that we're going to run
      debug:
        msg: "About to run: {{ webmethods_script_dir }}/{{ webmethods_script_start }} {{ webmethods_script_start_params }}"

    - name: Check if startup script exists
      stat: 
        path: "{{ webmethods_script_dir }}/{{ webmethods_script_start }}"
      register: stat_startup
    
    - name: fail if script not found
      fail: 
        msg: "Startup script {{ webmethods_script_dir }}/{{ webmethods_script_start }} does not exist!"
      when: fail_script_notfound|bool and stat_startup.stat.exists == false
    
    - name: Perform action if script exists
      block:
        - name: run startup script
          shell: "{{ webmethods_script_start }} {{ webmethods_script_start_params }}"
          args:
            chdir: "{{ webmethods_script_dir }}"
            executable: /bin/sh
          environment: "{{ webmethods_command_envs }}"
          register: cmd_result
        
        - name: Print command results to the console.
          debug: var=cmd_result verbosity=3
      when: stat_startup.stat.exists

    when: product_command is defined and product_command == "start"