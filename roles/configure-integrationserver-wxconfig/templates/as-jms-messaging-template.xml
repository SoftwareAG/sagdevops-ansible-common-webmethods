<?xml version="1.0" encoding="UTF-8"?><config>
    <autoConfig>
      <jms>
        <!-- Connection for performing the setup -->
        <hostname>localhost</hostname>
        <port>6849</port>
        <brokerName>Broker #1</brokerName>
        <username>Administrator</username> <!-- optional, use if Broker is secured with BasicAuthentification -->
        <password>manage</password> <!-- optional, use if Broker is secured with BasicAuthentification -->
        
        <!-- setup client group on broker -->
        <clientGroup name="MyClientGroup2" storageType="GUARANTEED">
            <user name="Administrator"/>	<!-- optional User-ACL setting -->
            <authenticator name="LocalAuth"/> <!-- optional Authenticator-ACL setting -->
        </clientGroup>
        
        <!-- setup acls for destination on broker -->
        <aclDest name="Transfer::Topic">
          <allowedClientGroups>
            <clientGroup name="TransferGroup"/>
          </allowedClientGroups>
        </aclDest>
        
        <!-- setup topic on broker -->
        <topic name="JMS::Topics::Event">
          <allowedClientGroups>
            <clientGroup name="MyClientGroup"/>
            <clientGroup name="IS-JMS"/>
          </allowedClientGroups>
        </topic>
    
        <!-- setup jndi for topic -->
        <jndiDestination name="TestTopic">
            <jndiProviderUrl>wmjmsnaming://Broker #1@localhost6849</jndiProviderUrl> <!-- JNDI-URL, Prefix defines Type of JNDI-Lookup, 'wmjmsnaming://'= webmethods, 'ldap://'=ldap, 'file://=filesystem, 'jnp://'=jboss, 't3://'=WebLogic  -->
            <destinationType>topic</destinationType>
            <sharedState active="true|false" ordering="none | publisher" />
            <priorityOrdering active="true|false" />
        </jndiDestination>
        
        
        <!-- setup queue on broker -->	
        <queue name="JMS:Queues::MyQueue">
          <clientGroup name="MyClientGroup"/>
          <sharedState active="true|false" ordering="none | publisher" />
          <priorityOrdering active="true|false" />
          <application name="This is optional" />
        </queue>
        
        <!-- setup jndi for queue -->
        <jndiDestination name="TestQueue">
            <jndiProviderUrl>wmjmsnaming://Broker #1@localhost:6849</jndiProviderUrl> <!-- JNDI-URL, Prefix defines Type of JNDI-Lookup, 'wmjmsnaming://'= webmethods, 'ldap://'=ldap, 'file://=filesystem, 'jnp://'=jboss, 't3://'=WebLogic -->
            <jndiUserName>Administrator</jndiUserName> <!-- User for jndi-Lookup -->
            <jndiPassword>manage</jndiPassword>  <!-- Password for jndi-Lookup -->
            <destinationType>queue</destinationType>
        </jndiDestination>
        
            <!-- setup jndi connection factory -->
        <jndiConnectionFactory name="JndiConnectionFactory">
            <jndiProviderUrl>wmjmsnaming://Broker #1@localhost:6849</jndiProviderUrl> <!-- JNDI-URL, Prefix defines Type of JNDI-Lookup, 'wmjmsnaming://'= webmethods, ldap://'=ldap, 'file://=filesystem, 'jnp://'=jboss, 't3://'=WebLogic -->
            <jndiUserName>Administrator</jndiUserName> <!-- User for jndi-Lookup -->
            <jndiPassword>manage</jndiPassword>  <!-- Password for jndi-Lookup -->
            <cfBrokerHostname>localhost</cfBrokerHostname>
            <cfBrokerPort>6849</cfBrokerPort>
            <cfBrokerName>Broker #1</cfBrokerName>
            <cfClientGroup>TestClientGroup</cfClientGroup>
            <cfType>ConnectionFactory</cfType> <!-- ConnectionFactory/XAConnectionFactory/TopicConnectionFactory/XATopicConnectionFactory/QueueConnectionFactory/XAQueueConnectionFactory, default=ConnectionFactory , optional-->
        </jndiConnectionFactory>
        
        <!-- setup jndi cluster connection factory -->
        <jndiConnectionFactory name="JndiClusterConnectionFactory">
            <jndiProviderUrl>wmjmsnaming://Broker #1@localhost:6849</jndiProviderUrl>
            <jndiUserName>Administrator</jndiUserName> <!-- User for jndi-Lookup -->
            <jndiPassword>manage</jndiPassword>  <!-- Password for jndi-Lookup -->
            <cfBrokerHostname>localhost</cfBrokerHostname>
            <cfBrokerPort>6849</cfBrokerPort>
            <cfBrokerName>Broker #1</cfBrokerName>
            <cfClientGroup>TestClientGroup</cfClientGroup>
            <cfClusterName>INT-Cluster</cfClusterName>
            <cfType>ConnectionFactory</cfType> <!-- ConnectionFactory/XAConnectionFactory/TopicConnectionFactory/XATopicConnectionFactory/QueueConnectionFactory/XAQueueConnectionFactory, default=ConnectionFactory , optional-->
        </jndiConnectionFactory>
        
        
        <!-- setup jndi alias -->
        <jndiAlias name="JndiAliasName">
            <description>JndiAliasDescription</description>
            <initialContextFactory>com.webmethods.jms.naming.WmJmsNamingCtxFactory</initialContextFactory>
            <providerURL>wmjmsnaming://Broker #1@localhost:6849</providerURL>
            <securityPrincipal>Admin</securityPrincipal>
            <securityCredentials>Passwort</securityCredentials>
            <providerURLFailoverList>wmjmsnaming://Broker #1@localhost:6849</providerURLFailoverList>
            <otherProps>com.webmethods.jms.naming.clientgroup=admin</otherProps>
        </jndiAlias>
        
        <!-- setup connection alias based on jndi -->
        <connectionAlias name="ConnectionAliasJndi">
            <description>ConnectionAliasDescription</description>
            <clientID></clientID>
            <transactionType>0</transactionType>
            <user>Administrator</user> <!-- optional-->
            <password>manage</password> <!-- optional-->
            <!--	
                transactionType:
                0: NO_TRANSACTION
                1: LOCAL_TRANSACTION
                2: XA_TRANSACTION
            -->
            <jndi>
                <jndiProviderAlias>JndiProviderAlias</jndiProviderAlias>
                <connectionFactoryLookupName>ConnectionFactoryLookupName</connectionFactoryLookupName>
            </jndi>
        </connectionAlias>
    
        <!-- setup connection alias based on webMethods API -->
        <connectionAlias name="ConnectionAliasWmApi">
            <description>ConnectionAliasDescription</description>
            <clientID></clientID>
            <transactionType>0</transactionType>
            <user>Administrator</user> <!-- optional-->
            <password>manage</password> <!-- optional-->
            <!--	
                transactionType:
                0: NO_TRANSACTION
                1: LOCAL_TRANSACTION
                2: XA_TRANSACTION
            -->
            <webMethodsAPI>
                <brokerHost>localhost:6849</brokerHost>			
                <brokerName>Broker #1</brokerName>
                <clientGroup>IS-JMS</clientGroup>
                <brokerList></brokerList><!-- optional-->
                <keystore>nameofkeystore</keystore><!-- optional-->
                <encrypted>true</encrypted><!-- JKS\PKCS12 optional-->
                <sharedState>true</sharedState><!-- optional-->
                <sharedStateOrder>true</sharedStateOrder><!-- optional-->
            </webMethodsAPI>
    
        </connectionAlias>
        
        <!-- setup jms trigger -->
        <jmsTrigger>
            <triggerName>wx.config.test.autoConfig.triggers:TestTrigger</triggerName>
            <package>WxConfigTestPackage</package>
            <aliasName>ConnectionAliasJndi</aliasName>
            <isConcurrent>true</isConcurrent> <!-- true/false, default=false , optional-->
            <maxExecutionThreads>10</maxExecutionThreads>	<!-- integer > 1, is ignored if isConcurrent=false default 1 , optional-->	
            <enabled>false</enabled> <!-- true/false. default=true, optional -->
            <joinTimeOut>1000</joinTimeOut> <!-- integer. optional -->
            <joinType>AND</joinType> <!-- AND/OR/XOR. optional -->
            <maxRetryAttempts>2</maxRetryAttempts> <!-- integer. optional -->
            <retryInterval>1000</retryInterval> <!-- integer. optional -->
            <resumeTaskSvcName>services:new_flowservice_1</resumeTaskSvcName> <!-- valid Service. optional -->
            <suspendOnError>true</suspendOnError>  <!-- true/false. default=true, optional -->
            <maxBatchSize>5</maxBatchSize> <!-- integer. optional -->
            <dupDetection>true</dupDetection> <!-- true/false. default=true, optional -->
            <dupHistory>true</dupHistory> <!-- true/false. default=true, optional -->
            <dupHistoryTTL>222</dupHistoryTTL> <!-- integer. optional -->
            <dupResolverSvcName>services:new_flowservice_1</dupResolverSvcName> <!-- valid Service. optional -->
            <acknowledgeMode>AUTO_ACKNOWLEDGE</acknowledgeMode> <!-- AUTO_ACKNOWLEDGE/CLIENT_ACKNOWLEDGE/DUPS_OK_ACKNOWLEDGE. Default=CLIENT_ACKNOWLEDGE optional -->
            <executeUser>Administrator</executeUser> <!-- valid User. optional -->
            <connectionCount>2</connectionCount> <!-- integer. optional -->
            <prefetchSize>2</prefetchSize> <!-- integer. optional -->
            <onTransientError>Suspend and Retry Later/Suspend and Recover</onTransientError> <!-- \\\\\'Suspend and Retry Later/Suspend and Recover\\\\\'/\\\\\'Throw Exception/Recover Only\\\\\'. Default=CLIENT_ACKNOWLEDGE optional -->
            <destinations>
                <destination>Topic::WxConfig::Test</destination>
                <!-- Topic, Queue -->
                <destinationType>Topic</destinationType>
                <messageSelector>targetId=\\\\\'wm\\\\\' and docId=\\\\\'22\\\\\'</messageSelector>
                <durableSubscriberName>test_wm_22</durableSubscriberName>
            </destinations>
            <routingRules>
                <ruleName>RoutingRule01</ruleName>
                <serviceName>wx.config.test.autoConfig.triggers:triggerService</serviceName>
                <filter></filter>
            </routingRules>
        </jmsTrigger>
            
      </jms>
    
    </autoConfig>
    </config>
    