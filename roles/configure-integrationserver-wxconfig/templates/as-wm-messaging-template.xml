<?xml version="1.0" encoding="UTF-8"?><config>
    <autoConfig>
        <!-- Broker settings see JMS -->
        <messaging>
            <!-- UM Settings - null to many elements -->
            <um>
                <!-- REALM Hosts - one or many elements for failover -->
                <hosts>nsp://${sys:wxConfig.hostname}:9000</hosts>
                <!-- optional element - if nothing is specified the OS user is used. -->
                <username>webmethods</username>
                <!-- optional element - if nothing is specified the access is tried without password. -->
                <password>manage</password>
                
                <initialContextFactory>com.pcbsys.nirvana.nSpace.NirvanaContextFactory</initialContextFactory>
    
                <!-- ACLS for the JNDI - null to many elements -->
                <jndiACL>
                 <!-- specify either user/host or security group name -->
                    <user>userX</user>
                    <host>${sys:wxConfig.hostname}</host>
                <!-- <group>group</group> -->
                    <manageACL>true</manageACL>
                    <subscribe>true</subscribe>
                    <publish>true</publish>
                    <named>true</named>
                    <purge>true</purge>
                    <full>false</full>
                </jndiACL>
    
                <!-- ACLS for the Realm - null to many elements -->
                <realmACL>
                 <!-- specify either user@host or security group name -->
                    <subject>securityGroupName</subject>
                    <manageACL>true</manageACL>
                    <full>true</full>
                    <access>true</access>
                    <configure>true</configure>
                    <channels>true</channels>
                    <p2p>true</p2p>
                    <realm>true</realm>
                    <adminApi>true</adminApi>
                    <manageDataGroups>true</manageDataGroups>
                    <pubDataGroups>true</pubDataGroups>
                    <ownDataGroups>true</ownDataGroups>
                </realmACL>
                
                <!-- Security group -->
                <securityGroup>
                        <name>SecurityGroupName</name>
                        <member>userAsMember@*</member>	<!-- optional users to add to the security group -->
                </securityGroup>
                
                <!-- JMS Connection Factory -->
                <jmsConnectionFactory>
                  <name>factory1</name>
                  <connectionFactoryType>ConnectionFactory</connectionFactoryType> <!-- Allowed values : ConnectionFactory,  QueueConnectionFactory, TopicConnectionFactory, XAConnectionFactory -->
                  <!-- optional element-->
                  <deleteOnUnload>false</deleteOnUnload>
                  <!-- optional element-->
                  <syncSendPersistent>true</syncSendPersistent> <!-- Sets the syncSendPersistent value of the UM connection factory -->
                  <!-- optional element-->
                  <autoCreateResource>true</autoCreateResource> <!-- Sets the autoCreateResource value of the UM connection factory -->
                  <!-- optional element-->
                  <connectionURL>nsp://${sys:wxConfig.hostname}:9000</connectionURL> <!-- Allows to explicitly set the parameter Connection URL (RNAME) for the connection factory. -->
                  <!-- For clustered environments use \, as separator nsp://realm01:9000\,nsp://realm02:9000\,nsp://realm03:9000 -->
                  
                  </jmsConnectionFactory>
    
                
                <!-- Delete topic (usually as part of some re-factoring of names -->
                <topic>
                  <name>test/topicForDeletion</name>
                  <deleteOnly>true</deleteOnly>
                </topic>
    
                <topic>
                  <name>test/topic1</name>
                  <!-- optional element-->
                  <suppressDefaultAcls>false</suppressDefaultAcls>
                  <!-- optional element-->
                  <deleteOnUnload>false</deleteOnUnload>
                  <!-- optional element-->
                  <type>Simple</type><!-- allowed values Realiable, Persistent, Mixed, Simple, Transient -->
                  <!-- optional element-->
                  <TTL>120</TTL>
                  <!-- optional element-->
                  <capacity>4444</capacity>
                  <!-- optional element-->
                  <useMergeEngine>false</useMergeEngine>
                  <!-- optional element-->
                  <useJMSEngine>false</useJMSEngine>
                  <!-- optional element-->
                  <storageProperties>
                    <autoMaintanence>true</autoMaintanence>
                    <honourCapacity>true</honourCapacity>
                    <enableCaching>true</enableCaching>
                    <cacheOnReaload>true</cacheOnReaload>
                    <enableReadBuffer>true</enableReadBuffer>
                    <readBufferSize>32333</readBufferSize>
                    <syncEachWrite>true</syncEachWrite>
                    <syncBatchSize>3333</syncBatchSize>
                    <syncBatchTime>222</syncBatchTime>
                    <fanoutArchiveTarget>some</fanoutArchiveTarget>
                    <priority>1</priority>
                  </storageProperties>
                  <!-- topic ACLS - null to many elements -->
                    <topicACL>
                  <!-- specify either user/host or security group name -->
                    <user>userX</user>
                    <host>${sys:wxConfig.hostname}</host>
                  <!-- <group>group</group> -->
                  
                    <manageACL>true</manageACL>
                    <subscribe>true</subscribe>
                    <publish>true</publish>
                    <named>true</named>
                    <purge>true</purge>
                    <full>true</full>
                  </topicACL>
                </topic>
        
      
        
                <queue>
                  <name>MyQueue</name>
                  <!-- optional element-->
                  <suppressDefaultAcls>false</suppressDefaultAcls>
                  <!-- optional element-->
                  <deleteOnUnload>false</deleteOnUnload>
                  <!-- optional element-->
                  <type>Transient</type><!-- allowed values Realiable, Persistent, Mixed, Simple, Transient -->
                  <!-- optional element-->
                  <TTL>120</TTL>
                  <!-- optional element-->
                  <capacity>3333</capacity>
                  <!-- optional element-->
                  <storageProperties>
                    <autoMaintanence>false</autoMaintanence>
                    <honourCapacity>true</honourCapacity>
                    <enableCaching>true</enableCaching>
                    <cacheOnReaload>true</cacheOnReaload>
                    <enableReadBuffer>true</enableReadBuffer>
                    <readBufferSize>32</readBufferSize>
                    <syncEachWrite>true</syncEachWrite>
                    <syncBatchSize>333</syncBatchSize>
                    <syncBatchTime>333</syncBatchTime>
                    <fanoutArchiveTarget>some</fanoutArchiveTarget>
                    <priority>1</priority>
                  </storageProperties>
                  <!-- queue ACLS - null to many elements -->
                  <queueACL>
                   <!-- specify either user/host or security group name -->
                    <user>userX</user>
                    <host>${sys:wxConfig.hostname}</host>
                    <!-- <group>group</group> -->
                    <manageACL>true</manageACL>
                    <peek>true</peek>
                    <push>true</push>
                    <pop>true</pop>
                    <purge>true</purge>
                    <full>true</full>
                  </queueACL>
                </queue>
               </um>
            
    
            <brokerServer> <!-- Multiple entries possible -->
                <hostname>localhost</hostname>
                <port>6849</port>
                <broker> <!-- Multiple entries possible -->
                    <name>MyBroker</name>
                    <description>This is my personal Broker</description>
                    <isDefault>false</isDefault>
                    
                    <clientGroup name="MyClientGroup">				<!-- Multiple entries possible -->
                        <lifeCycle>EXPLICIT_DESTROY</lifeCycle>		<!-- Optional; values: "EXPLICIT_DESTROY" (default), "DESTROY_ON_DISCONNECT" -->
                        <storageType>GUARANTEED</storageType>		<!-- Optional; values: "GUARANTEED" (default), "VOLATILE" -->
                    </clientGroup>
                    
                    <territory> <!-- optional -->
                        <name></name>
                        <join>  <!-- optional: If missing, the territory will be created from scratch 
                                        with the current Broker as its first member	-->
                            <hostname></hostname>		<!-- Hostname where Broker Server is running -->
                            <port></port>				<!-- Port of Broker Server -->
                            <brokerName></brokerName>	<!-- Name of Broker where territory already exists -->
                        </join>
                    </territory>
                </broker>
                
            </brokerServer>
    
            
               
            <integrationServer>
                <webMethodsMessagingSettings>
                    <!-- General Settings -->
                    <connectionAliasName>connectionAliasName</connectionAliasName>
                    <description>connectionAliasName description</description>
                    <clientPrefix>clientprefix007</clientPrefix>
                    <shareClientPrefix>No</shareClientPrefix>
                    
                    <!--Connection Settings -->
                    <realmURL>nsp://${sys:wxConfig.hostname}:9000</realmURL>
                    <maximumReconnectionAttempts>5</maximumReconnectionAttempts>
                    
                    <!-- Producer Settings -->
                    <enableCSQ>Yes</enableCSQ>
                    <maximumCSQSize>-1</maximumCSQSize>
                    <drainCSQinOrder>Yes</drainCSQinOrder>
                    <publishWaitTimewhileReconnecting>0</publishWaitTimewhileReconnecting>
                </webMethodsMessagingSettings>
                
                <webMethodsMessagingSettings>
                    <!-- General Settings -->
                    <connectionAliasName>connectionAliasName22</connectionAliasName>
                    <description>connectionAliasName description</description>
                    <clientPrefix>clientprefix022</clientPrefix>
                    <shareClientPrefix>No</shareClientPrefix>
                    
                    <!--Connection Settings -->
                    <realmURL>nsp://${sys:wxConfig.hostname}:9000</realmURL>
                    <maximumReconnectionAttempts>5</maximumReconnectionAttempts>
                    
                    <!-- Producer Settings -->
                    <enableCSQ>Yes</enableCSQ>
                    <maximumCSQSize>-1</maximumCSQSize>
                    <drainCSQinOrder>Yes</drainCSQinOrder>
                    <publishWaitTimewhileReconnecting>0</publishWaitTimewhileReconnecting>
                </webMethodsMessagingSettings>
                
                
                <webMethodsMessagingTrigger updateIfExists="true">    <!-- "updateIfExists" is optional and defaults to "false";
                                                            if set to "true", the trigger will be deleted and then
                                                            re-created; this, as opposed to a true update, is necessary
                                                            because various properties of the trigger cannot be
                                                            changed once the latter was created -->
                    <triggerName>A:testTrigger</triggerName>
                    <package>${package.name}</package>
                    <properties>
                        <queueCapacity>10</queueCapacity>
                        <queueRefillLevel>4</queueRefillLevel>
                        <ackQueueSize>1</ackQueueSize>
                        <maxRetryAttempts>0</maxRetryAttempts>			<!-- 0 = indefinitely -->
                        <retryInterval>10</retryInterval>				<!-- value in milliseconds -->
                        <onRedeliveryFailure>Throw Exception</onRedeliveryFailure>   <!-- possible: "Throw Exception" 
                                                                                                    "Suspend and Retry Later" -->
                        <resumeTaskSvcName></resumeTaskSvcName>			<!-- optional: "Resource monitoring service" in Designer -->
                        <isPriorityEnabled>false</isPriorityEnabled>	<!-- possible: false (default), true -->
                        <isConcurrent>true</isConcurrent>
                        <serialSuspendOnError>false</serialSuspendOnError>
                        <maxExecutionThreads>1</maxExecutionThreads>
                        <dupDetection>false</dupDetection>
                        <dupHistory>false</dupHistory>
                        <dupHistoryTTL>7200000</dupHistoryTTL>				<!-- value in milliseconds -->
                        <dupResolverSvcName></dupResolverSvcName>			<!-- optional: "Document resolver service" in Designer -->
                        <executeUser>Administrator</executeUser>		<!-- optional; default = Administrator -->
                        <executeEnabled>true</executeEnabled>		    <!-- optional; possible: false (default), true
                                                                                Attention: Triggers are always created with execution 
                                                                                enabled. So if a trigger is configured to be disabled,
                                                                                its creation will be skipped altogether. The alternative
                                                                                would be to first create the trigger and then disable it.
                                                                                But there would be a short interval, when messages would
                                                                                be consumed. To avoid that risk, the creation is skipped. -->
                    </properties>
                    <conditions>  <!-- Multiple entries possible -->
                        <conditionName>Cond1</conditionName>
                        <serviceName>A:svc1</serviceName>
                        <joinType>N/A</joinType>		<!-- possible: N/A, AND, OR, XOR-->
                        <messageTypeFilterPairs>  <!-- Multiple entries possible -->
                            <messageType>A:doc1</messageType>
                            <filter></filter>
                            <providerFilter>field1='abc'</providerFilter>
                        </messageTypeFilterPairs>
                    </conditions>
                </webMethodsMessagingTrigger>
                
                <webMethodsMessagingTrigger updateIfExists="true">    <!-- "updateIfExists" is optional and defaults to "false";
                                                            if set to "true", the trigger will be deleted and then
                                                            re-created; this, as opposed to a true update, is necessary
                                                            because various properties of the trigger cannot be
                                                            changed once the latter was created -->
                    <triggerName>A:testTriggerWithJoin</triggerName>
                    <package>${package.name}</package>
                    <properties>
                        <joinTimeOut>86400000</joinTimeOut>						<!-- value in milliseconds; -1 = timeout disabled
                                                                            only needed for multiple conditions, otherwise leave empty -->
                        <queueCapacity>10</queueCapacity>
                        <queueRefillLevel>4</queueRefillLevel>
                        <ackQueueSize>1</ackQueueSize>
                        <maxRetryAttempts>0</maxRetryAttempts>			<!-- 0 = indefinitely -->
                        <retryInterval>10</retryInterval>				<!-- value in milliseconds -->
                        <onRedeliveryFailure>Throw Exception</onRedeliveryFailure>   <!-- possible: "Throw Exception" 
                                                                                                    "Suspend and Retry Later" -->
                        <resumeTaskSvcName></resumeTaskSvcName>			<!-- optional: "Resource monitoring service" in Designer -->
                        <isPriorityEnabled>false</isPriorityEnabled>	<!-- possible: false (default), true -->
                        <isConcurrent>true</isConcurrent>
                        <serialSuspendOnError>false</serialSuspendOnError>
                        <maxExecutionThreads>1</maxExecutionThreads>
                        <dupDetection>false</dupDetection>
                        <dupHistory>false</dupHistory>
                        <dupHistoryTTL>7200000</dupHistoryTTL>				<!-- value in milliseconds -->
                        <dupResolverSvcName></dupResolverSvcName>		<!-- optional: "Document resolver service" in Designer -->
                        <executeUser>Administrator</executeUser>		<!-- optional; default = Administrator -->
                        <executeEnabled>true</executeEnabled>		    <!-- optional; possible: false (default), true
                                                                                Attention: Triggers are always created with execution 
                                                                                enabled. So if a trigger is configured to be disabled,
                                                                                its creation will be skipped altogether. The alternative
                                                                                would be to first create the trigger and then disable it.
                                                                                But there would be a short interval, when messages would
                                                                                be consumed. To avoid that risk, the creation is skipped. -->
                    </properties>
                    <conditions>  <!-- Multiple entries possible -->
                        <conditionName>Cond1</conditionName>
                        <serviceName>A:svc1</serviceName>
                        <joinType>AND</joinType>		<!-- possible: N/A, AND, OR, XOR-->
                        <messageTypeFilterPairs>  <!-- Multiple entries possible -->
                            <messageType>A:doc1</messageType>
                            <filter></filter>
                            <providerFilter>field1='abc'</providerFilter>
                        </messageTypeFilterPairs>
                        <messageTypeFilterPairs>  <!-- Multiple entries possible -->
                            <messageType>A:doc2</messageType>
                            <filter></filter>
                            <providerFilter>field2='def'</providerFilter>
                        </messageTypeFilterPairs>
                    </conditions>
                </webMethodsMessagingTrigger>
                
                <jndiSettings>
                    <JNDIAliasName>MyUMJNDI</JNDIAliasName>
                    <description>MyUMJNDI</description>
                    <initialContextFactory>com.pcbsys.nirvana.nSpace.NirvanaContextFactory</initialContextFactory>
                    <providerURL>nsp://${sys:wxConfig.hostname}:9000/</providerURL>
                    <providerURLFailoverList></providerURLFailoverList>
                    <securityPrincipal></securityPrincipal>
                    <securityCredentials></securityCredentials>
                    <otherProperties></otherProperties>
                </jndiSettings>
                
                <jmsAlias>
                    <!-- General Settings -->
                    <connectionAliasName>MyJMSAlias</connectionAliasName>
                    <description>UMAlias</description>
                    <transactionType>LOCAL_TRANSACTION</transactionType> <!--NO_TRANSACTION,LOCAL_TRANSACTION,XA_TRANSACTION-->
                    <connectionClientID>myClientID1234</connectionClientID>
                    <user></user>
                    <password></password>
                    
                    <!-- Connection Protocol Settings -->
                    <createConnectionUsing>JNDI Lookup</createConnectionUsing> <!--native Broke needs to be done-->
                    <JNDIProviderAliasName>MyUMJNDI</JNDIProviderAliasName>
                    <connectionFactoryLookupName>local_um</connectionFactoryLookupName>
                    <monitorwebMethodsConnectionFactory>No</monitorwebMethodsConnectionFactory> <!--No, Yes-->
                    
                    <!-- Advanced Settings -->
                    <classLoader>INTEGRATION_SERVER</classLoader> <!-- INTEGRATION_SERVER or Package name -->
                    <maximumCSQSize>-1</maximumCSQSize>
                    <drainCSQinOrder>true</drainCSQinOrder>
                    <createTemporaryQueue>true</createTemporaryQueue>
                    <manageDestinations>true</manageDestinations>
                    <createNewConnectionperTrigger>false</createNewConnectionperTrigger>
                    
                    <!-- Producer Caching -->
                    <cachingMode>DISABLED</cachingMode> <!-- Version 1 only DISABLED is supported!! -->
                    
                    <!-- Producer Retry -->
                    <maxRetryAttempts>0</maxRetryAttempts>
                    <retryInterval>1000</retryInterval>
                    <startAfterCreation>true</startAfterCreation>
                </jmsAlias>
                
                <!-- setup jms trigger -->
                <jmsTrigger updateIfExists="true">    <!-- "updateIfExists" is optional and defaults to "false";
                                                            if set to "true", the trigger will be deleted and then
                                                            re-created; this, as opposed to a true update, is necessary
                                                            because various properties of the JMS trigger cannot be
                                                            changed once the latter was created -->
                    <triggerName>wx.config.test.autoConfig.triggers:TestTrigger</triggerName>
                    <package>${package.name}</package>
                    <aliasName>ConnectionAliasJndi</aliasName>
                    <isConcurrent>true</isConcurrent> <!-- true/false, default=false , optional-->
                    <maxExecutionThreads>10</maxExecutionThreads>	<!-- integer > 1, is ignored if isConcurrent=false default 1 , optional-->	
                    <enabled>false</enabled> <!-- true/false. default=true, optional -->
                    <joinTimeOut>1000</joinTimeOut> <!-- integer. optional -->
                    <joinType>AND</joinType> <!-- AND/OR/XOR. optional -->
                    <maxRetryAttempts></maxRetryAttempts> <!-- integer. optional -->
                    <retryInterval>1000</retryInterval> <!-- integer. optional -->
                    <resumeTaskSvcName>services:new_flowservice_1</resumeTaskSvcName> <!-- valid Service. optional -->
                    <suspendOnError>true</suspendOnError>  <!-- true/false. default=true, optional -->
                    <maxBatchSize>5</maxBatchSize> <!-- integer. optional -->
                    <dupDetection>true</dupDetection> <!-- true/false. default=true, optional -->
                    <dupHistory>true</dupHistory> <!-- true/false. default=true, optional -->
                    <dupHistoryTTL>222</dupHistoryTTL> <!-- integer. optional -->
                    <dupResolverSvcName>services:new_flowservice_1</dupResolverSvcName> <!-- valid Service. optional -->
                    <acknowledgeMode>AUTO_ACKNOWLEDGE</acknowledgeMode> <!-- AUTO_ACKNOWLEDGE/CLIENT_ACKNOWLEDGE/DUPS_OK_ACKNOWLEDGE. Default=CLIENT_ACKNOWLEDGE optional -->
                    <executeUser>Administrator</executeUser> <!-- valid User. optional -->
                    <connectionCount>2</connectionCount> <!-- integer. optional -->
                    <onTransientError>Suspend and Retry Later/Suspend and Recover</onTransientError> <!-- \\\\\'Suspend and Retry Later/Suspend and Recover\\\\\'/\\\\\'Throw Exception/Recover Only\\\\\'. Default=Throw Exception/Recover Only. optional -->
                    <destinations>
                        <destination>Topic::WxConfig::Test</destination>
                        <!-- Topic, Queue -->
                        <destinationType>Topic</destinationType>
                        <messageSelector>targetId=\\\\\'wm\\\\\' and docId=\\\\\'22\\\\\'</messageSelector>
                        <durableSubscriberName>test_wm_22</durableSubscriberName>
                    </destinations>
                    <routingRules>
                        <ruleName>RoutingRule01</ruleName>
                        <serviceName>wx.config.test.autoConfig.triggers:triggerService</serviceName>
                        <filter></filter>
                    </routingRules>
                </jmsTrigger>
          </integrationServer>
        </messaging>
    </autoConfig>
    </config>
    