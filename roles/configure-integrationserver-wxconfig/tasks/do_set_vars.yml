---

  - name: Set changed flag to false if not defined
    set_fact: 
      configure_integrationserver_wxconfig_set_package_vars_changed: false
    when: configure_integrationserver_wxconfig_enable_package_changed is not defined

  - debug: var=rvar_wxconfig_target_package_name verbosity=1
  - debug: var=rvar_wxconfig_unique_groupname verbosity=1
  - debug: var=rvar_wxconfig_vars_environment verbosity=1
  - debug: var=rvar_wxconfig_vars_inline verbosity=1
  - debug: var=rvar_wxconfig_vars_dict verbosity=1

  - name: fail if mandatory params not specified
    fail: 
      msg: "A mandatory param was not defined, cannot do anything."
    when: item is not defined or item == ""
    with_items:
      - rvar_wxconfig_target_package_name
      - rvar_wxconfig_unique_groupname
      - rvar_wxconfig_vars_dict

  - name: Check if main wxconfig controller file is there already
    stat:
      path: "{{ _wxconfig_target_package_config_path }}/wxconfig.cnf"
    register: stat_wxconfig_enabled

  - name: fail if wxconfig is not enabled via the controller file
    fail:
      msg: "wxconfig controller file wxconfig.cnf is not present in current package {{ rvar_wxconfig_target_package_name }}...make sure to enable WxConfig for this package"
    when: stat_wxconfig_enabled.stat.exists == false

  - name: adding vars in a separate file
    block:

      - name: set environment to default value
        set_fact: 
          rvar_wxconfig_vars_environment: "GLOBAL"
        when: rvar_wxconfig_vars_environment is not defined or rvar_wxconfig_vars_environment | trim == ""

      - name: set file name if not defined
        set_fact: 
          rvar_wxconfig_vars_filename: "vars_{{ rvar_wxconfig_vars_environment | trim | lower }}_{{ rvar_wxconfig_unique_groupname }}.cnf"
        when: rvar_wxconfig_vars_filename is not defined or rvar_wxconfig_vars_filename | trim == ""

      - name: Create var file if it does not exist yet
        file:
          path: "{{ _wxconfig_target_package_config_path }}/{{ rvar_wxconfig_vars_filename }}"
          state: touch
      
      - name: Populate var file with var values
        lineinfile:
          path: "{{ _wxconfig_target_package_config_path }}/{{ rvar_wxconfig_vars_filename }}"
          regexp: '^{{ item.key }}'
          insertafter: '^#{{ item.key }}'
          line: "{{ item.key }}={{ item.value }}"
        register: "_wxconfig_vars_operation"
        with_dict: "{{ rvar_wxconfig_vars_dict }}"

      - name: Include this new config in the main controller file
        lineinfile:
          path: "{{ _wxconfig_target_package_config_path }}/wxconfig.cnf"
          regexp: "^{{ item }}"
          insertafter: "^#{{ item }}"
          line: "{{ item }}"
        register: "_wxconfig_controller_operation"
        with_items:
          - "wx.config.incl={{ rvar_wxconfig_vars_filename }}"
        when: rvar_wxconfig_vars_environment | trim | upper == "GLOBAL"

      - name: Include this new config in the main controller file
        lineinfile:
          path: "{{ _wxconfig_target_package_config_path }}/wxconfig.cnf"
          regexp: "^{{ item }}"
          insertafter: "^#{{ item }}"
          line: "{{ item }}"
        register: "_wxconfig_controller_operation"
        with_items:
          - "wx.config.env.{{ rvar_wxconfig_vars_environment | trim | upper }}={{ rvar_wxconfig_vars_filename }}"
        when: rvar_wxconfig_vars_environment | trim | upper != "GLOBAL"

      - name: Set changed flag to true if any mutating operation did change
        set_fact: 
          configure_integrationserver_wxconfig_set_package_vars_changed: true
        when: _wxconfig_vars_operation.changed == true or _wxconfig_controller_operation.changed == true

    when: rvar_wxconfig_vars_inline | default() | bool == false and rvar_wxconfig_vars_dict is defined and rvar_wxconfig_vars_dict.keys()|length > 0

  - name: adding vars inline
    block:

      - name: Populate var file with var values
        lineinfile:
          path: "{{ _wxconfig_target_package_config_path }}/wxconfig.cnf"
          regexp: '^{{ item.key }}'
          insertafter: '^#{{ item.key }}'
          line: "{{ item.key }}={{ item.value }}"
        register: "_wxconfig_vars_operation"
        with_dict: "{{ rvar_wxconfig_vars_dict }}"

      - name: Set changed flag to true if any mutating operation did change
        set_fact: 
          configure_integrationserver_wxconfig_set_package_vars_changed: true
        when: _wxconfig_vars_operation.changed == true

    when: rvar_wxconfig_vars_inline | default() | bool and rvar_wxconfig_vars_dict is defined and rvar_wxconfig_vars_dict.keys()|length > 0

  - name: Print the changed var
    debug:
      var: configure_integrationserver_wxconfig_set_package_vars_changed
      verbosity: 2